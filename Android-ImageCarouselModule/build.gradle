def versionMajor = 0
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

def gitSha() {
    def res = 'git rev-parse HEAD'.execute([], project.rootDir).text.trim()

    def diff = 'git diff'.execute([], project.rootDir).text.trim()
    if (diff != null && diff.length() > 0) {
        res += "-dirty"
    }

    return res
}

def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

apply plugin: 'android-library'

repositories {
    mavenCentral()
}

dependencies {

    compile 'com.android.support:support-v13:18.0.+'
//    compile 'com.google.guava:guava:15.+'
//    compile 'com.squareup.dagger:dagger:1.2.+'
//    provided 'com.squareup.dagger:dagger-compiler:1.2.+'
    compile 'com.jakewharton.timber:timber:2.2.2'
    compile 'com.squareup.picasso:picasso:2.2.+'
//    compile 'com.jakewharton:butterknife:4.0.+'
//    compile 'joda-time:joda-time:2.3'
//    compile 'nl.qbusict:cupboard:2.0.0'

    provided 'com.jakewharton.espresso:espresso:1.1-r2'
    androidTestCompile('com.jakewharton.espresso:espresso:1.1-r2') {
        exclude group: 'com.squareup.dagger'
        exclude group: 'com.google.guava'
    }
    androidTestCompile 'com.squareup:fest-android:1.0.7'
    /*androidTestCompile('com.jakewharton.espresso:espresso-support-v4:1.1-r2') {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.google.guava', module: 'guava'
    }*/

    // compile 'com.google.android.gms:play-services:3.1.+'

    // compile 'com.squareup.okhttp:okhttp:1.3.0'
    // compile 'com.squareup.retrofit:retrofit:1.5.+'
    // debugCompile 'com.squareup.retrofit:retrofit-mock:1.4.1'
    // compile 'com.github.frankiesardo:icepick:2.3.+'
    // provided 'com.github.frankiesardo:icepick-processor:2.3.+'
    // compile 'com.squareup:otto:1.3.+'
    // compile 'com.google.code.gson:gson:2.2.+'
    // compile 'com.koushikdutta.ion:ion:1.2.+'
}


android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}" + ((versionPatch != 0) ? ".${versionPatch}" : "")
        buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
        buildConfigField "String", "BUILD_NUMBER", "\"${versionBuild}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}
